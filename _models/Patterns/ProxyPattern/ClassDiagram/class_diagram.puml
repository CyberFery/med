@startuml
skinparam class {
    BackgroundColor Snow
    ArrowColor DimGrey
}

class Logger {
    +info(message: String): void
}

interface GatewayFilter {
    +filter(exchange: Exchange, chain: GatewayFilterChain): Mono<Void>
}

abstract class AbstractGatewayFilterFactory {
    -filters: Map<String, GatewayFilter>
    +createFilter(config: Object): GatewayFilter
}

class LoggingFilter {
    -logger: Logger
    +apply(config: Object): GatewayFilter
}

class GatewayAPI {
    +sendRequest(): void
}

GatewayAPI --|> AbstractGatewayFilterFactory
GatewayAPI --> LoggingFilter
LoggingFilter .. Logger : Uses
GatewayFilter <|.. LoggingFilter
@enduml