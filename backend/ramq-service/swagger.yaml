openapi: 3.0.0
info:
  title: ramq-service
  description: Specification for RAMQ services.
  version: 1.0.0
servers:
  - url: http://localhost:8085
########################################################################################################################
paths:
  /ramq/reconstruct-medical-record:
    post:
      description: Reconstruct medical record from a specific date.
      responses:
        '201':
          description: Success, reconstruct done.
        '500':
          description: Internal server error.
  ######################################################################################################################
  /ramq/medical-record:
    post:
      summary: Create a new medical record
      operationId: createMedicalRecord
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicalRecordRequest'
      responses:
        '201':
          description: Medical record created successfully
        '400':
          description: Failed to create medical record, bad request
        '500':
          description: Internal server error
########################################################################################################################components:
components:
  schemas:
    MedicalRecordRequest:
      type: object
      properties:
        patient:
          $ref: '#/components/schemas/Patient'
        medicalVisitList:
          type: array
          items:
            $ref: '#/components/schemas/MedicalVisit'
        medicalHistoryList:
          type: array
          items:
            $ref: '#/components/schemas/MedicalHistory'
      required:
        - patient
        - medicalVisitList
        - medicalHistoryList
    Patient:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        healthInsuranceNumber:
          type: integer
          format: int64
        dateOfBirth:
          type: string
          format: date-time
        genre:
          type: string
          enum:
            - FEMALE
            - MALE
        establishedDiagnosis:
          type: string
        knownParents:
          type: array
          items:
            $ref: '#/components/schemas/Person'
        cityOfBirth:
          type: string
        contactInformations:
          type: array
          items:
            $ref: '#/components/schemas/ContactInformation'
        isHealthcareProfessional:
          type: boolean
        isPhysician:
          type: boolean
      required:
        - firstName
        - lastName
        - healthInsuranceNumber
        - dateOfBirth
        - genre
        - establishedDiagnosis
        - cityOfBirth
        - isHealthcareProfessional
        - isPhysician
    MedicalVisit:
      type: object
      properties:
        visitedEstablishment:
          type: string
        physicianSeen:
          $ref: '#/components/schemas/Physician'
        visitDate:
          type: string
          format: date-time
        diagnosisList:
          type: array
          items:
            $ref: '#/components/schemas/Diagnosis'
        summaryOfTheVisitByDoctor:
          type: string
        notesForOtherDoctors:
          type: string
    MedicalHistory:
      type: object
      properties:
        diagnosis:
          type: string
        treatment:
          type: string
        illnessList:
          type: array
          items:
            $ref: '#/components/schemas/Illness'
        primaryCarePhysician:
          $ref: '#/components/schemas/Physician'
    Person:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
    ContactInformation:
      type: object
      properties:
        residentialAddress:
          $ref: '#/components/schemas/ResidentialAddress'
        phoneNumber:
          $ref: '#/components/schemas/PhoneNumber'
        emailAddress:
          $ref: '#/components/schemas/EmailAddress'
    Diagnosis:
      type: object
      properties:
        description:
          type: string
        treatment:
          type: string
    Illness:
      type: object
      properties:
        description:
          type: string
        onsetOfIllnessDate:
          type: string
          format: date-time
        endOfIllnessDate:
          type: string
          format: date-time
    Physician:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        specialization:
          type: string
    ResidentialAddress:
      type: object
      properties:
        addresses:
          type: array
          items:
            type: string
    PhoneNumber:
      type: object
      properties:
        number:
          type: integer
          format: int64
    EmailAddress:
      type: object
      properties:
        email:
          type: string